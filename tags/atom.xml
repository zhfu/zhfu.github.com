<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Clément Delafargue - RSS feed</title>
    <link href="http://blog.clement.delafargue.name/atom.xml" rel="self" />
    <link href="http://blog.clement.delafargue.name" />
    <id>http://blog.clement.delafargue.name/atom.xml</id>
    <author>
        <name>Clément Delafargue</name>
        <email>clement+blog@delafargue.name</email>
    </author>
    <updated>2012-10-21T00:00:00Z</updated>
    <entry>
    <title>Blog deployment system</title>
    <link href="http://blog.clement.delafargue.name/posts/2012-10-21-blog-deployment-system.html" />
    <id>http://blog.clement.delafargue.name/posts/2012-10-21-blog-deployment-system.html</id>
    <published>2012-10-21T00:00:00Z</published>
    <updated>2012-10-21T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
<header>
<h1>Blog deployment system</h1>
<p>by <em>Clément Delafargue</em> on <strong>October 21, 2012</strong></p>
<p>Tagged as: <a href="http://blog.clement.delafargue.name/tags/misc.html">misc</a>.</p>
</header>

<section>
<p>I’ve spent some time to have an automatic deployment system for this blog. I’ll explain briefly how it works.</p>
<h2 id="bricks">Bricks</h2>
<p>This blog is statically generated with Hakyll. The generated files are placed in <code>_site</code> (which is <code>.gitignore</code>’d).</p>
<p>The hosting platform is <a href="http://clever-cloud.com">Clever Cloud</a> which offers git deployment.</p>
<p>Since the generated are not versioned, I can’t directly push it. For that, I need to create a new empty, orphan branch :</p>
<pre><code>git checkout --orphan publish</code></pre>
<p>This branch will now hold the generated files.</p>
<p>So every time I publish something, I have to :</p>
<ul>
<li>generate a clean site</li>
<li>checkout to <code>publish</code></li>
<li>remove the source files and copy the generated files</li>
<li>commit</li>
<li>push</li>
<li>get back to <code>master</code> and clean up the mess</li>
</ul>
<p>Plus a few extra (save the current state to a stash during the deployment, for instance).</p>
<p>All of which conveniently wrapped in a <code>make publish</code>. Feel free to read and comment the source code (which is quite dirty, I know). <a href="https://github.com/divarvel/blog/blob/master/Makefile">Makefile</a></p>
<p>There are a few ToDos left, such as tagging and signing every publication.</p>
</section>
</article>
]]></summary>
</entry>

</feed>
